taskKey="com.codegym.games.spaceinvaders.part33"\n\nSpace Invaders (Part 33/34)

At this stage, we'll add scorekeeping to the game. The player gets 15 points for each ordinary ship and 100 points for the boss.
It will be most convenient to keep score in the checkHit() method, after reworking it a little.
To store the total score, we'll add a score variable in the SpaceInvadersGame class. We'll display it on the screen using the Game class's setScore method.


Requirements:
1.	The EnemyShip class must have a public int score field that is initialized to 15 when it is declared.
2.	The Boss class&#39;s constructor must set the score field to 100.
3.	The EnemyFleet class must have a public int checkHit(List&lt;Bullet&gt; bullets) method.
4.	The EnemyFleet class must not have a public void checkHit(List&lt;Bullet&gt; bullets) method.
5.	The checkHit(List&lt;Bullet&gt; bullets) method must return 0 if the bullets list is empty.
6.	The checkHit(List&lt;Bullet&gt; bullets) method must return the sum of the values of the score fields of all of the objects in the ships list on which the kill() method is called.
7.	There must be a private int score field in the SpaceInvadersGame class.
8.	The score field must be initialized to 0 in the createGame() method.
9.	The onTurn(int) method must call the setScore(int) method with score as the argument.
10.	In the onTurn(int) method, the setScore(int) method must be called before the drawScene() method.
11.	In the check() method, the score field must be increased by the value returned by calling the checkHit(List&lt;Bullet&gt;) method on the enemyFleet object.


Space Invaders (Part 32/34)

The game is lost not only if the player's ship is destroyed, but also if the enemy fleet reaches the player's ship.
To determine the coordinates of the lower edge of the enemy fleet, we'll add a getBottomBorder() method.
If all the enemies are destroyed, the player wins. For convenience, we'll add a getShipCount(), method that will return the number of ships remaining in the enemy fleet.
If the number is 0, you need to call the stopGameWithDelay() method and call the win() method on the playerShip object.
This method replaces the player's ship matrix with ShapeMatrix.WIN_PLAYER.
We'll check the number of ships remaining in the enemy fleet and whether they have reached the player's ship in the check() method.



Space Invaders (Part 31/34)

Let's make the boss animate continuously. To do this, we need to give the setAnimatedView method an isLoopAnimation parameter responsible
for indicating whether the animation should loop. This parameter is used to properly set the loopAnimation field.
If the loopAnimation field is true, the nextFrame method repeats the frames by resetting frameIndex.
As a result, you need to refactor the parameters in places where the setAnimatedView method is called.



Space Invaders (Part 30/34)

Now we'll teach the boss to shoot. Depending on the animation frame, the boss will shoot from different cannons.
We'll also override the kill() method, where we'll set the value of the isAlive field and set the frames of the explosion animation.



Space Invaders (Part 29/34)

It's time to create the enemy boss. To make him look tougher, we'll add an animation when he moves.
If the animation changes with every step, it will move too quickly.
To create the desired effect, you need to change the frame once every 10 steps.
That's why we need to override the nextFrame method and add a frameCount variable that will count steps.



Space Invaders (Part 28/34)

At this stage, we'll add a checkHit(List<Bullet> bullets) method for checking whether the player's projectile has hit an enemy ship.
After a hit, we need to "kill" the corresponding projectile and enemy ship. Additionally, we'll add a deleteHiddenShips()
method that will remove "hidden" ships from the list. To remove the ships, you can either use an iterator, or create a copy of the ships list
and run through it in a loop. If we determine that a ship needs to be removed, we'll call ships.remove(ship).
The checkHit(List<Bullet> bullets) and deleteHiddenShips() methods must be called in the SpaceInvadersGame class's check() method.



